const axios = require('axios');
const fetch = require('node-fetch');

const handler = async (msg, { conn, args, usedPrefix, command }) => {
    const text = args.join(' ');
    const chatId = msg.key.remoteJid;
    
    if (!text) {
        return conn.sendMessage(chatId, { 
            text: `✳️ Ingresa tu pregunta\nEjemplo: *${usedPrefix + command}* ¿quién inventó WhatsApp?` 
        }, { quoted: msg });
    }

    try {
        await conn.sendMessage(chatId, { react: { text: '⏳', key: msg.key } });

        const name = msg.pushName || 'Usuario';
        const prompt = await getPrompt();
        let result = '';

        try {
            result = await luminaiQuery(text, name, prompt);
            result = cleanResponse(result);
        } catch (e) {
            console.error('Error Luminai:', e);
            try {
                result = await perplexityQuery(text, prompt);
            } catch (e) {
                console.error('Error Perplexity:', e);
                throw new Error('No se obtuvo respuesta de los servicios');
            }
        }

        const responseMsg = `╭━〔 *RESPUESTA IA* 〕━⬣
│  ✦ *Pregunta:* ${text}
│  ✦ *Usuario:* ${name}
╰━━━━━━━━━━━━⬣

${result}

╭━〔 *FUENTE* 〕━⬣
│  ✦ *Powered by Luminai AI*
╰━━━━━━━━━━━━⬣`;

        await conn.sendMessage(chatId, { 
            text: responseMsg 
        }, { quoted: msg });
        
        await conn.sendMessage(chatId, { react: { text: '✅', key: msg.key } });

    } catch (error) {
        console.error(error);
        await conn.sendMessage(chatId, { 
            text: `❌ Error: ${error.message}` 
        }, { quoted: msg });
        
        await conn.sendMessage(chatId, { react: { text: '❌', key: msg.key } });
    }
};

async function getPrompt() {
    try {
        const res = await fetch('https://raw.githubusercontent.com/elrebelde21/LoliBot-MD/main/src/text-chatgpt.txt');
        return await res.text();
    } catch {
        return 'Eres un asistente inteligente';
    }
}

function cleanResponse(text) {
    if (!text) return '';
    return text
        .replace(/Maaf, terjadi kesalahan saat memproses permintaan Anda/g, '')
        .replace(/Generated by BLACKBOX\.AI.*?https:\/\/www\.blackbox\.ai/g, '')
        .replace(/and for API requests replace https:\/\/www\.blackbox\.ai with https:\/\/api\.blackbox\.ai/g, '')
        .trim();
}

async function luminaiQuery(q, user, prompt) {
    const { data } = await axios.post('https://luminai.my.id', {
        content: q,
        user: user,
        prompt: prompt,
        webSearchMode: true
    });
    return data.result;
}

async function perplexityQuery(q, prompt) {
    const { data } = await axios.get('https://api.perplexity.ai/chat', {
        params: {
            query: encodeURIComponent(q),
            context: encodeURIComponent(prompt)
        }
    });
    return data.response;
}

handler.help = ['luminai <pregunta>'];
handler.command = ['luminai', 'ia', 'ai', 'ask'];
handler.tags = ['ai'];
handler.register = true;
module.exports = handler;
